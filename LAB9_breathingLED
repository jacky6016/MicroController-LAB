#include "msp430.h"                     ; #define controlled include file

        NAME    main                    ; module name

        PUBLIC  main                    ; make the main label vissible
                                        ; outside this module
        ORG     0FFFEh
        DC16    init                    ; set reset vector to 'init' label
        
        ORG    	0xFFE2
        DW      TA1_HND

        RSEG    CSTACK                  ; pre-declaration of segment
        RSEG    CODE                    ; place program in 'CODE' segment

init:   MOV     #SFE(CSTACK), SP        ; set up stack

main:   NOP                             ; main program
        MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop watchdog timer
        
        MOV.W   #TASSEL_1 + ID_1 + MC_1 + TACLR, &TA0CTL        ; TA0 for PWM
        BIS.B   #BIT2, &P1DIR
        BIS.B   #BIT2, &P1SEL
        
        MOV.W   #OUTMOD_7, &TA0CCTL1
        MOV.W   #100, &TA0CCR0
        MOV.W   #0, &TA0CCR1
       
        MOV.W   #TASSEL_1 + ID_1 + MC_1 + TACLR, &TA1CTL        ; TA1 for adjusting duty cycle
        MOV.W   #1000, &TA1CCR0
        MOV.W   #1, R5
        MOV.W   #CCIE,  &TA1CCTL0       ; Set CCIE to 1 (Enable interrupt)
        
        BIS.W   #GIE,SR                 ; Enable general interrupt

        
        JMP $                           ; jump to current location '$'
                                        ; (endless loop)
                                        
 
TA1_HND:         
        CMP     #1, R5
        JZ      Up
Down:
        CMP     #1, &TA0CCR1
        JL      Toggle
        JMP     Check
Up:        
        CMP     #100, &TA0CCR1
        JGE     Toggle
        JMP     Check
Toggle:
        XOR.W   #1, R5
Check:
        CMP     #1, R5
        JN      Dim
Enhance:        
        MOV.W   &TA0CCR1, R6
        ADD.W   #5, R6
        MOV.W   R6, &TA0CCR1
        JMP     DONE
Dim:
        MOV.W   &TA0CCR1, R6
        SUB.W   #5, R6
        MOV.W   R6, &TA0CCR1
        JMP     DONE
DONE:   
        RETI                                        
 
        END
