#include "io430.h"
#include "intrinsics.h"
void delay(void);
int main( void )
{
  // Stop watchdog timer to prevent time out reset
  WDTCTL = WDTPW + WDTHOLD;
  // Stop watchdog timer to prevent time out reset
  WDTCTL = WDTPW + WDTHOLD;
/* Set LED1, Button */  
  P1SEL = 0x00;
  P1DIR = 0x01;
  P1OUT = 0x00;
  P1REN = 0x02;
  P1OUT = 0x02;
  P1IES = 0x02;
/* Set LED2 */
  P4SEL = 0x00;
  P4DIR = 0x80;
  P4OUT = 0x00;
/* Set Button2 */
  P2SEL = 0x00;
  P2DIR = 0x00;
  P2REN = 0x02;
  P2OUT = 0x02;
  P2IES = 0x02; 
/* Enable interrup */
  P1IE = 0x02;
  P2IE = 0x02;
/* Clear Interrupt Flag */  
  P1IFG &= 0xFD;  //mask bic=> and(inv)  bis=> or 
  P2IFG &= 0xFD;

  //GIE Interrupt Enable 
  __bis_SR_register(GIE);
  
/* Infinite loop */ 
  for(;;)
  {

  }

  return 0;
}

void delay(void)
{
  int i,j;
  for(i=0;i<500;i++)
  {
    for(j=0;j<350;j++)
    {}
  }
}

#pragma vector=PORT1_VECTOR
__interrupt void P1_ISR(void)
{
  P1IE &= 0xFD;
  P4OUT |= 0x80;
  delay();
  P4OUT &= 0x7F;
  P1IFG &= 0xFD;
  P1IE |= 0x02;
}

#pragma vector=PORT2_VECTOR
__interrupt void P2_ISR(void)
{
  P2IE &= 0xFD;
  P1OUT |= 0x01;
  delay();
  P1OUT &= 0xFE;
  P2IFG &= 0xFD;
  P2IE |= 0x02;
}
